@charset "UTF-8";
//Created by LIN on 2016/1/21.
//http://www.w3cplus.com/preprocessor/sass-basic-mixins-nesting-placeholders-extend.html
//0.1
//nav{
//	display:block;
//	ul{
//		margin:50px auto;
//		//	居中的代码
//		width:800px;
//		width:-moz-fit-content;
//		width:-webkit-fit-content;
//		width:-o-fit-content;
//		width:fit-content;
//		padding:0;
//		list-style:none;
//		&:before,
//		&:after{
//			content:"";
//			display:table;
//		}
//		&:after{
//			clear:both;
//			overflow:hidden;
//		}
//		li{
//			background:#34495E;
//			float:left;
//			-webkit-transform:skewX(25deg);
//			-moz-transform:skewX(25deg);
//			-o-transform:skewX(25deg);
//			-ms-transform:skewX(25deg);
//			transform:skewX(25deg);
//
//			&:hover{
//				background:#E74C3C;
//			}
//			a {
//				display: block;
//				color: #fff;
//				text-transform: uppercase;
//				text-decoration: none;
//				font-family: Arial,Helvetica;
//				font-size: 14px;
//				padding: 1em 2em;
//				-webkit-transform: skewX(-25deg);
//				-moz-transform: skewX(-25deg);
//				-o-transform: skewX(-25deg);
//				-ms-transform: skewX(-25deg);
//				transform: skewX(-25deg);
//			}
//		}
//	}
//}
//0.2

//define fit-content

//@mixin fit-content() {
//	width:-webkit-fit-content;
//	width:-moz-fit-content;
//	width:-o-fit-content;
//	width:-ms-fit-content;
//	width:fit-content;
//}
////define transform skewX()
//
//@mixin skewX($degrees) {
//	-webkit-transform:skewX($degrees);
//	-moz-transform:skewX($degrees);
//	-o-transform:skewX($degrees);
//	-ms-transform:skewX($degrees);
//	transform:skewX($degrees);
//}
////ul中的清除浮动单独拿出来
//%clearfix{
//	*zoom:1;
//
//	&:after,
//	&:before{
//		content:"";
//		display:table;
//	}
//
//	&:after{
//		clear:both;
//		overflow:hidden;
//	}
//}
//nav{
//	display:block;
//
//	ul{
//		margin:50px auto;
//		width:800px;
//		@include fit-content(); //调用fit-content()
//		padding:0;
//		list-style:none;
//
//		@extend %clearfix;//调用%cleafix
//
//		li{
//			background:#34495E;
//			float:left;
//			@include skewX(25deg); //调用skewX()，并传参数值25deg
//
//			&:hover{
//				background:#E74C3C;
//			}
//
//			a{
//				display:block;
//				color:#FFF;
//				text:{
//					transform:uppercase;
//					decoration:none;
//				}
//				font:{
//					family:Arial, Helvetica;
//					size:14px;
//				}
//				padding:1em 2em;
//				@include skewX(-25deg); //调用skewX(),并传参数值-25deg
//			}
//		}
//	}
//}
//0.3 使用SASS制作Red-team新发布的下拉菜单效果
// 1、定义变量
//在定义变量中，主要定义了几个常用的变量，比如说文本色、背景色、悬浮的背景色、字号、字体等：
$color:#222333 !default;
//设置文本颜色
$bgColor:#34495E !default;
//设置背景色
$sfbgColor:#E74C3C !default;
//设置悬浮背景色
$fontSize:14px !default;
//设置字号
$fontFamily:Arial, Helvetica !default;
//设置字体
$width:462px !default;
//设置默认宽度
// 2、设置clearfix
//因为菜项进行了浮动，需要在父导航上清除浮动，这里使用%clearfix创建了一个清除浮动的属性模块：
%clearfix{
	&{
		*zoom:1;
	}
	&:before,
	&:after{
		content:"";
		display:table;
	}
	&:after{
		clear:both;
		overflow:hidden;
	}
}
// 3、清除列表的默认样式

//为了让浏览器显示一致，先通过%listStyle定义一个重置列表属性的模块：
%listStyle{
	margin:0;
	padding:0;
	list-style:none outside none;
}
// 4、设置浏览器前缀

//在样式中需要使用CSS3的部分属性，为了避免添加浏览器的私有属性，在这里，我们先设置一下：
$prefix-for-webkit:true !default;
$prefix-for-mozilla:true !default;
$prefix-for-microsoft:true !default;
$prefix-for-opera:true !default;
$prefix-for-spec:true !default;
//浏览器前缀
@mixin prefixer($property, $value, $prefixes) {
	@each $prefix in $prefixes{

		@if $prefix == webkit and $prefix-for-webkit == true{
			-webkit-#{$property}:$value;
		} @else if $prefix == moz and $prefix-for-mozilla == true{
			-moz-#{$property}:$value;
		} @else if $prefix == ms and $prefix-for-microsoft == true{
			-ms-#{$property}:$value;
		} @else if $prefix == o and $prefix-for-opera == true{
			-o-#{$property}:$value;
		} @else if $prefix == spec and $prefix-for-spec == true{
			#{$property}:$value;
		} @else{
			@warn "Unrecognized prefix: #{$prefix}";
		}
	}
}
// 5、设置transform功能

//在效果中我们有使用CSS3的transform功能，为了能方便使用，把这一块也提取出来：
//示例: @include prefixer(border-radius, $radius, webkit spec);
//Transform, transform-origin, transform-style
//----------------------------------------
@mixin transform($property...) {
	@include prefixer(transform, $property, webkit moz o ms spec);
}
@mixin transform-origin($axis: 50%) {
	// x-axis - left | center | right  | length | %
	// y-axis - top  | center | bottom | length | %
	// z-axis -                          length
	@include prefixer(transform-origin, $axis, webkit moz o ms spec);
}
@mixin skewX($degrees) {
	@include prefixer(transform, skewX($degrees), webkit moz o ms spec);
	-webkit-backface-visibility:hidden;
}
// 6、设置过渡transition

//为了让下接菜单出来的时候，动作平滑些，在效果中使用了transition:
// Return vendor-prefixed property names if appropriate
// Example: transition-property-names((transform, color, background), moz) -> -moz-transform, color, background
//----------------------------------------
@function transition-property-names($props, $vendor: false) {
	$new-props:();
	@each $prop in $props{
		$new-props:append($new-props, transition-property-name($prop, $vendor), comma);
	}
	@return $new-props;
}
@function transition-property-name($prop, $vendor: false) {
	// put other properties that need to be prefixed here aswell
	@if $vendor and $prop == transform{
		@return unquote('-'+$vendor+'-'+$prop);
	} @else{
		@return $prop;
	}
}
// transition
//----------------------------------------
@mixin transition($properties...) {
	@if length($properties) >= 1{
		@include prefixer(transition, $properties, webkit moz o ms spec);
	} @else{
		$properties:all 0.15s ease-out 0;
		@include prefixer(transition, $properties, webkit moz o ms spec);
	}
}
// 7、设置fit-content模块

//这个CSS3属性，在这里使用@mixin来定义：
@mixin fit-content{
	width:-webkit-fit-content;
	width:-moz-fit-content;
	width:-o-fit-content;
	width:-ms-fit-content;
	width:fit-content;
}
// 8、设置box-shadow

//实现box-shadow比较简单：
@mixin box-shadow($shadow...) {
	@include prefixer(box-shadow, $shadow, webkit spec);
}
//9、定义文本样式块

//为了实现导航文本块样式，在需要时才调用，特意将其调用出来：
%typography{
	color:$color;
	text:{
		decoration:none;
		align:center;
	}
	font:{
		family:$fontFamily;
		size:$fontSize;
	}
}
// 10、完善导航菜单其他样式

//前面1~9可以说都是为第10步所做的准备，那么现在，我们通过SCSS来完善整个导航效果：
.menu{
	width:$width;
	@extend %clearfix; //调用清除浮动
	@extend %listStyle; //调用清除列表样式
	@include fit-content;
	margin:50px auto;
}
.drop-menu{
	@extend %listStyle; //调用清除列表样式
}
.menu > li{
	background:$bgColor;
	float:left;
	position:relative;
	@include skewX(25deg);
}
.menu a{
	display:block;
	@extend %typography;
}
.menu li:hover{
	background:$sfbgColor;
}
.menu > li > a{
	padding:1em 2em;
	@include skewX(-25deg);
}
/*Dropdown menu*/
.drop-menu {
	position: absolute;
	width: $width / 4;
	left: 50%;
	margin-left: -($width / 8);
	opacity: 0;
	visibility: hidden;
	@include skewX(-25deg);
	@include transform-origin(left top);

	li {
		background-color: $bgColor;
		position: relative;
		overflow: hidden;
		opacity: 0;
		visibility: hidden;
		@include transition(all .2s ease );

		a {
			padding: 1em 2em;
		}

		&::after {
			content: "";
			position: absolute;
			top: -125%;
			height: 100%;
			width: 100%;
			@include box-shadow(0 0 50px rgba(0,0,0,.9));
		}

		&:nth-child(odd) {
			@include transform(skewX(-25deg) translateX(0));

			a {
				@include skewX(25deg);
			}

			&::after {
				right: -50%;
				@include transform(skewX(-25deg) rotate(3deg));
			}
		}

		&:nth-child(even){
			@include transform(skewX(25deg) translateX(0));

			a {
				@include skewX(-25deg);
			}

			&::after {
				left: -50%;
				@include transform(skewX(25deg) rotate(3deg));
			}
		}
	}
}
.menu > li:hover .drop-menu,
.menu > li:hover .drop-menu li {
	opacity: 1;
	visibility: visible;
}
.menu > li:hover .drop-menu li:nth-child(even){
	@include transform(skewX(25deg) translateX(15px));
}
.menu > li:hover .drop-menu li:nth-child(odd){
	@include transform(skewX(-25deg) translateX(-15px));
}